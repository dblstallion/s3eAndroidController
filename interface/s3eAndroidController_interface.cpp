/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "s3eAndroidController.h"


// Define S3E_EXT_SKIP_LOADER_CALL_LOCK on the user-side to skip LoaderCallStart/LoaderCallDone()-entry.
// e.g. in s3eNUI this is used for generic user-side IwUI-based implementation.
#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
#if defined I3D_ARCH_MIPS || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)) || defined I3D_ARCH_NACLX86_64
// For platforms missing stack-switching (MIPS, WP8, NaCl, etc.) make loader-entry via LoaderCallStart/LoaderCallDone() on the user-side.
#define LOADER_CALL_LOCK
#endif
#endif


#include "s3eAndroidController_interface.h"

static s3eAndroidControllerFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xb381b915, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: s3eAndroidController");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xb381b915, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eAndroidControllerAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult s3eAndroidControllerRegister(s3eAndroidControllerCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[0] func: s3eAndroidControllerRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerRegister);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidControllerRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerRegister);
#endif

    return ret;
}

s3eResult s3eAndroidControllerUnRegister(s3eAndroidControllerCallback cbid, s3eCallback fn)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[1] func: s3eAndroidControllerUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerUnRegister);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidControllerUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerUnRegister);
#endif

    return ret;
}

void s3eAndroidControllerStartFrame()
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[2] func: s3eAndroidControllerStartFrame"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerStartFrame);
#endif

    g_Ext.m_s3eAndroidControllerStartFrame();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerStartFrame);
#endif

    return;
}

bool s3eAndroidControllerSelectControllerByPlayer(int player)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[3] func: s3eAndroidControllerSelectControllerByPlayer"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerSelectControllerByPlayer);
#endif

    bool ret = g_Ext.m_s3eAndroidControllerSelectControllerByPlayer(player);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerSelectControllerByPlayer);
#endif

    return ret;
}

int s3eAndroidControllerGetPlayerCount()
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[4] func: s3eAndroidControllerGetPlayerCount"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetPlayerCount);
#endif

    int ret = g_Ext.m_s3eAndroidControllerGetPlayerCount();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetPlayerCount);
#endif

    return ret;
}

bool s3eAndroidControllerGetButtonState(int button)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[5] func: s3eAndroidControllerGetButtonState"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetButtonState);
#endif

    bool ret = g_Ext.m_s3eAndroidControllerGetButtonState(button);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetButtonState);
#endif

    return ret;
}

float s3eAndroidControllerGetAxisValue(int axis)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[6] func: s3eAndroidControllerGetAxisValue"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetAxisValue);
#endif

    float ret = g_Ext.m_s3eAndroidControllerGetAxisValue(axis);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetAxisValue);
#endif

    return ret;
}

s3eResult s3eAndroidControllerGetButtonDisplayName(char* dst, int button, s3eBool terminateString)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[7] func: s3eAndroidControllerGetButtonDisplayName"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetButtonDisplayName);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidControllerGetButtonDisplayName(dst, button, terminateString);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetButtonDisplayName);
#endif

    return ret;
}

s3eResult s3eAndroidControllerGetAxisDisplayName(char* dst, int axis, s3eBool terminateString)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[8] func: s3eAndroidControllerGetAxisDisplayName"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetAxisDisplayName);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidControllerGetAxisDisplayName(dst, axis, terminateString);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetAxisDisplayName);
#endif

    return ret;
}

void s3eAndroidControllerSetPropagateButtonsToKeyboard(bool propagate)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[9] func: s3eAndroidControllerSetPropagateButtonsToKeyboard"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerSetPropagateButtonsToKeyboard);
#endif

    g_Ext.m_s3eAndroidControllerSetPropagateButtonsToKeyboard(propagate);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerSetPropagateButtonsToKeyboard);
#endif

    return;
}

bool s3eAndroidControllerGetPropagateButtonsToKeyboard()
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[10] func: s3eAndroidControllerGetPropagateButtonsToKeyboard"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetPropagateButtonsToKeyboard);
#endif

    bool ret = g_Ext.m_s3eAndroidControllerGetPropagateButtonsToKeyboard();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetPropagateButtonsToKeyboard);
#endif

    return ret;
}

bool s3eAndroidControllerIsTypeSupported(s3eAndroidControllerType type)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[11] func: s3eAndroidControllerIsTypeSupported"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerIsTypeSupported);
#endif

    bool ret = g_Ext.m_s3eAndroidControllerIsTypeSupported(type);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerIsTypeSupported);
#endif

    return ret;
}

s3eResult s3eAndroidControllerSetType(s3eAndroidControllerType type)
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[12] func: s3eAndroidControllerSetType"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerSetType);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidControllerSetType(type);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerSetType);
#endif

    return ret;
}

s3eAndroidControllerType s3eAndroidControllerGetType()
{
    IwTrace(ANDROIDCONTROLLER_VERBOSE, ("calling s3eAndroidController[13] func: s3eAndroidControllerGetType"));

    if (!_extLoad())
        return S3E_ANDROIDCONTROLLER_TYPE_GENERIC;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetType);
#endif

    s3eAndroidControllerType ret = g_Ext.m_s3eAndroidControllerGetType();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_s3eAndroidControllerGetType);
#endif

    return ret;
}
